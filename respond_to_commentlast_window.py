# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'respond_to_commentlast_window.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_Responding_to_comments_Window(object):
    index_number = -1
    def setupUi(self, Responding_to_comments_Window):
        Responding_to_comments_Window.setObjectName("Responding_to_comments_Window")
        Responding_to_comments_Window.resize(800, 631)
        self.centralwidget = QtWidgets.QWidget(Responding_to_comments_Window)
        self.centralwidget.setObjectName("centralwidget")
        self.textEdit = QtWidgets.QTextEdit(self.centralwidget)
        self.textEdit.setGeometry(QtCore.QRect(250, 10, 461, 171))
        self.textEdit.setObjectName("textEdit")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(10, 20, 191, 71))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(30, 100, 151, 31))
        self.label_2.setObjectName("label_2")
        font = QtGui.QFont()
        font.setPointSize(16)
        self.label_2.setFont(font)
        self.textEdit_2 = QtWidgets.QTextEdit(self.centralwidget)
        self.textEdit_2.setGeometry(QtCore.QRect(250, 200, 461, 171))
        self.textEdit_2.setObjectName("textEdit_2")
        self.commandLinkButton = QtWidgets.QCommandLinkButton(self.centralwidget, clicked = lambda : self.send_feedback())
        self.commandLinkButton.setGeometry(QtCore.QRect(470, 400, 241, 71))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(14)
        self.commandLinkButton.setFont(font)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("C:/Users/Pardis/Desktop/icons8-feedback-64 (1).png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.commandLinkButton.setIcon(icon)
        self.commandLinkButton.setIconSize(QtCore.QSize(60, 60))
        self.commandLinkButton.setObjectName("commandLinkButton")
        self.commandLinkButton_2 = QtWidgets.QCommandLinkButton(self.centralwidget, clicked = lambda : self.display_comment())
        self.commandLinkButton_2.setGeometry(QtCore.QRect(470, 470, 222, 61))
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("C:/Users/Pardis/Desktop/icons8-circled-right-48.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.commandLinkButton_2.setIcon(icon1)
        self.commandLinkButton_2.setIconSize(QtCore.QSize(60, 60))
        self.commandLinkButton_2.setObjectName("commandLinkButton_2")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(30, 170, 151, 31))
        self.label_3.setObjectName("label_3")
        font = QtGui.QFont()
        font.setPointSize(16)
        self.label_3.setFont(font)
        self.calendarWidget = QtWidgets.QCalendarWidget(self.centralwidget)
        self.calendarWidget.setGeometry(QtCore.QRect(20, 380, 371, 220))
        self.calendarWidget.setObjectName("calendarWidget")
        Responding_to_comments_Window.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(Responding_to_comments_Window)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 26))
        self.menubar.setObjectName("menubar")
        Responding_to_comments_Window.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(Responding_to_comments_Window)
        self.statusbar.setObjectName("statusbar")
        Responding_to_comments_Window.setStatusBar(self.statusbar)

        self.retranslateUi(Responding_to_comments_Window)
        QtCore.QMetaObject.connectSlotsByName(Responding_to_comments_Window)

    def retranslateUi(self, Responding_to_comments_Window):
        _translate = QtCore.QCoreApplication.translate
        Responding_to_comments_Window.setWindowTitle(_translate("Responding_to_comments_Window", "Responding to commentsWindow"))
        self.label.setText(_translate("Responding_to_comments_Window", "Message from:"))
        self.label_2.setText(_translate("Responding_to_comments_Window", "TextLabel"))
        self.commandLinkButton.setText(_translate("Responding_to_comments_Window", "Send feedback"))
        self.commandLinkButton_2.setText(_translate("Responding_to_comments_Window", "Next Comment"))
        self.label_3.setText(_translate("Responding_to_comments_Window", "Date"))



    def read_all_comment_user(self):
        import os
        import json

        self.list_comment = []
        for filename in os.listdir(f"F:\\project_ap_99472068\\comments"):
            for date_file in os.listdir(f"F:\\project_ap_99472068\\comments\\{filename}" ):
                with open(f"F:\\project_ap_99472068\\comments\\{filename}\\{date_file}", encoding = 'utf-8') as f:
                    comment = f.read()

                self.list_comment.append([filename, date_file, comment])

    def tarikhe_morede_nazar_baraye_namayeshe_comment(self):
        self.comment_in_date = []
        for filename, date_file, comment in self.list_comment:
            date_file = date_file.split('.txt')[0]
            if date_file == (str(self.calendarWidget.selectedDate().toPyDate()).replace('-', '.')):
                self.comment_in_date.append([filename, date_file, comment])

    @classmethod
    def index(cls):
        return cls.index_number

    @classmethod
    def index_add_one(cls):
        cls.index_number += 1

    @classmethod
    def insert_index_zero(cls):
        cls.index_number = 0



    @staticmethod
    def show_error(message, type_mesasge):

        msg = QtWidgets.QMessageBox()
        msg.setIcon(type_mesasge)
        msg.setText(f"Hello !")
        msg.setInformativeText(message)
        msg.setWindowTitle("Message")
        msg.exec_()

    def display_comment(self):
        self.tarikhe_morede_nazar_baraye_namayeshe_comment()
        try:
            self.filename, self.date_file, comment = self.comment_in_date[self.index()]
            self.textEdit.setText(comment)
            self.label_2.setText(self.filename)
            self.label_3.setText(self.date_file)
            self.index_add_one()
        except:
            self.show_error("There are no comments",QtWidgets.QMessageBox.Information)
            self.insert_index_zero()


    def send_feedback(self):
        import json
        feedback = self.textEdit_2.placeholderText()

        a_file = open(f"F:\\project_ap_99472068\\comments\\{self.filename}\\{self.date}.txt", "r")
        json_object = json.load(a_file)
        a_file.close()
        print(json_object)

        with open(f"F:\\project_ap_99472068\\comments\\{self.filename}\\{self.date}.txt", encoding='utf-8') as f:
            comment = f.read()

        a_file = open(f"F:\\project_ap_99472068\\comments\\{self.filename}\\{self.date}.txt", "w")
        json.dump(json_object, a_file)
        a_file.close()











if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Responding_to_comments_Window = QtWidgets.QMainWindow()
    ui = Ui_Responding_to_comments_Window()
    ui.setupUi(Responding_to_comments_Window)
    Responding_to_comments_Window.show()
    sys.exit(app.exec_())
